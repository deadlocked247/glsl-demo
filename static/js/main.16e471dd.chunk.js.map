{"version":3,"sources":["cross.jpg","ping.mp3","Store.js","PaddleModel.js","Post.js","Scene.js","App.js","index.js"],"names":["module","exports","ping","Audio","pingSound","create","set","count","welcome","api","pong","velocity","currentTime","volume","clamp","play","state","reset","localStorage","setItem","Math","max","parseInt","getItem","useStore","React","forwardRef","props","ref","useLoader","GLTFLoader","process","nodes","materials","castShadow","dispose","model","position","scale","font","rotation","PI","fontSize","toString","object","Bone","Bone003","Bone006","Bone010","receiveShadow","material","glove","material-roughness","geometry","arm","skeleton","wood","mesh_0","side","mesh_1","foam","mesh_2","lower","mesh_3","upper","mesh_4","Post","fallback","blendFunction","BlendFunction","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","radius","bias","edgeDetection","opacity","premultiply","ADD","Controls","values","useRef","onMove","e","current","clientX","window","innerWidth","clientY","innerHeight","useEffect","document","addEventListener","useFrame","camera","x","lerp","y","highscore","color","fontWeight","onClick","useCallback","sRGB","fov","concurrent","shadowMap","gl","powerPreference","alpha","antialias","children","Paddle","useBox","type","args","onCollide","contact","impactVelocity","mouse","PaddleModel","Ball","map","THREE","crossTexture","useSphere","mass","attach","clearcoat","clearcoatRoughness","Background","ContactGround","usePlane","Scene","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","shadow-bias","iterations","tolerance","defaultContactMaterial","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","gravity","allowSleep","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.16e471dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.00397b42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ping.e49c4b6b.mp3\";","import create from 'zustand';\nimport pingSound from './ping.mp3';\nimport clamp from 'lodash-es/clamp';\n\nconst ping = new Audio(pingSound);\nconst [useStore] = create((set) => ({\n  count: 0,\n  welcome: true,\n  api: {\n    pong(velocity) {\n      ping.currentTime = 0;\n      ping.volume = clamp(velocity / 20, 0, 1);\n      ping.play();\n      if (velocity > 4) set((state) => ({ count: state.count + 1 }));\n    },\n    reset: (welcome) => set((state) => {\n        localStorage.setItem('highscore', Math.max(parseInt(localStorage.getItem('highscore')), state.count))\n        return ({ welcome, count: welcome ? state.count : 0 });\n    })\n  },\n}));\n\nexport default useStore;","import React, { Suspense, useRef, useCallback, useMemo } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { Text } from 'drei'\n\nimport useStore from './Store';\n\n\nexport default React.forwardRef((props, ref) => {\n  const { nodes, materials } = useLoader(\n    GLTFLoader,\n    process.env.PUBLIC_URL + \"/pingpong.glb\"\n  );\n  const count = useStore((state) => state.count);\n\n\n  return (\n    <mesh castShadow ref={ref} dispose={null}>\n      <group\n        ref={props.model}\n        position={[-0.05, 0.37, 0.3]}\n        scale={[0.15, 0.15, 0.15]}\n      >\n        <Text\n          font=\"https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5TRG.woff\"\n          rotation={[-Math.PI / 2, 0, 0]}\n          position={[0, 1, -.5]}\n          fontSize={12}\n          >{count.toString()}</Text>\n        <group rotation={[1.88, -0.35, 2.32]} scale={[2.97, 2.97, 2.97]}>\n          <primitive object={nodes.Bone} />\n          <primitive object={nodes.Bone003} />\n          <primitive object={nodes.Bone006} />\n          <primitive object={nodes.Bone010} />\n          <skinnedMesh\n            castShadow\n            receiveShadow\n            material={materials.glove}\n            material-roughness={1}\n            geometry={nodes.arm.geometry}\n            skeleton={nodes.arm.skeleton}\n          />\n        </group>\n        <group rotation={[0, -0.04, 0]} scale={[141.94, 141.94, 141.94]}>\n          <mesh\n            castShadow\n            receiveShadow\n            material={materials.wood}\n            geometry={nodes.mesh_0.geometry}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            material={materials.side}\n            geometry={nodes.mesh_1.geometry}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            material={materials.foam}\n            geometry={nodes.mesh_2.geometry}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            material={materials.lower}\n            geometry={nodes.mesh_3.geometry}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            material={materials.upper}\n            geometry={nodes.mesh_4.geometry}\n          />\n        </group>\n      </group>\n    </mesh>\n  );\n});\n","import React, { Suspense, useMemo, useEffect } from \"react\";\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  Noise,\n  SSAO,\n  SMAA,\n  Glitch,\n  Scanline,\n  Pixelation,\n  ChromaticAberration,\n  Vignette,\n} from \"react-postprocessing\";\nimport { GlitchMode, BlendFunction } from \"postprocessing\";\n\nimport useStore from \"./Store\";\n\nexport default function Post() {\n  const welcome = useStore((state) => state.welcome);\n\n  return (\n    <Suspense fallback={null}>\n      <EffectComposer>\n        <Vignette />\n        <SSAO\n          blendFunction={BlendFunction.MULTIPLY} // blend mode\n          samples={8} // amount of samples per pixel (shouldn't be a multiple of the ring count)\n          rings={4} // amount of rings in the occlusion sampling pattern\n          distanceThreshold={1.0} // global distance threshold at which the occlusion effect starts to fade out. min: 0, max: 1\n          distanceFalloff={0.0} // distance falloff. min: 0, max: 1\n          rangeThreshold={0.5} // local occlusion range threshold at which the occlusion starts to fade out. min: 0, max: 1\n          rangeFalloff={0.1} // occlusion range falloff. min: 0, max: 1\n          luminanceInfluence={0.9} // how much the luminance of the scene influences the ambient occlusion\n          radius={20} // occlusion sampling radius\n          scale={0.5} // scale of the ambient occlusion\n          bias={0.5} // occlusion bias\n        />\n        {/* <GodRays\n          sun={sunRef}\n          blendFunction={BlendFunction.Screen} // The blend function of this effect.\n          samples={60} // The number of samples per pixel.\n          density={0.96} // The density of the light rays.\n          decay={0.9} // An illumination decay factor.\n          weight={0.4} // A light ray weight factor.\n          exposure={0.6} // A constant attenuation coefficient.\n          clampMax={1} // An upper bound for the saturation of the overall effect.\n          width={Resizer.AUTO_SIZE} // Render width.\n          height={Resizer.AUTO_SIZE} // Render height.\n          kernelSize={KernelSize.SMALL} // The blur kernel size. Has no effect if blur is disabled.\n          blur={true} // Whether the god rays should be blurred to reduce artifacts.\n          /> */}\n        {/* <Glitch\n          delay={[1.5, 3.5]} // min and max glitch delay\n          duration={[0.6, 1.0]} // min and max glitch duration\n          strength={[0.3, 1.0]} // min and max glitch strength\n          mode={GlitchMode.SPORADIC} // glitch mode\n          active // turn on/off the effect (switches between \"mode\" prop and GlitchMode.DISABLED)\n          ratio={0.9} // Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\n        /> */}\n        <SMAA edgeDetection={0.1} />\n        <Noise opacity={0.15} premultiply blendFunction={BlendFunction.ADD} />\n        {/* <Pixelation granularity={5} /> */}\n      </EffectComposer>\n    </Suspense>\n  );\n}\n","import { Canvas, useFrame } from \"react-three-fiber\";\n\nimport React, { useCallback, Suspense, useRef } from \"react\";\nimport lerp from \"lerp\";\n\nimport useStore from \"./Store\";\nimport { Text } from \"drei\";\n\nconst Controls = ({ welcome }) => {\n  let values = useRef([0, 0, 0]);\n\n  const onMove = (e) => {\n    values.current[0] = e.clientX / window.innerWidth - .5;\n    values.current[1] = 5 + (1 - e.clientY / window.innerHeight);\n  };\n  React.useEffect(() => {\n    document.addEventListener(\"mousemove\", onMove);\n  });\n  useFrame(({ camera }) => {\n    if (values.current[0])\n    camera.position.x = lerp(camera.position.x, values.current[0], 0.1);\n    if (values.current[1])\n    camera.position.y = lerp(camera.position.y, values.current[1], 0.1);\n  }, 1);\n\n  const highscore = localStorage.getItem('highscore');\n  return (\n    <Suspense fallback={null}>\n      <Text\n        color=\"#000\"\n        font=\"https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5TRG.woff\"\n        position={[0, 2, -6]}\n        fontSize={1.25}\n        fontWeight={600}\n        rotation={[-Math.PI / 8, 0, 0]}\n\n      >\n        Welcome to pong!\n      </Text>\n      <Text\n        color=\"#000\"\n        font=\"https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5TRG.woff\"\n        position={[0, .5, -6]}\n        fontSize={.5}\n        fontWeight={600}\n        rotation={[-Math.PI / 8, 0, 0]}\n\n      >\n        Click anywhere to start\n      </Text>\n      <Text\n        color=\"#000\"\n        font=\"https://fonts.gstatic.com/s/notosans/v7/o-0IIpQlx3QUlC5A4PNr5TRG.woff\"\n        position={[0, -10, -6]}\n        rotation={[-Math.PI / 8, 0, 0]}\n        fontSize={.5}\n        fontWeight={600}\n      >\n        Highscore: {highscore}\n      </Text>\n    </Suspense>\n  );\n};\n\nexport default function (props) {\n  const welcome = useStore((state) => state.welcome);\n  const { reset } = useStore((state) => state.api);\n  const onClick = useCallback(() => welcome && reset(false), [welcome, reset]);\n\n  return (\n    <Canvas\n      sRGB\n      camera={{  position: [0, 5, 12], fov: 50 }}\n      onClick={onClick}\n      concurrent\n      shadowMap\n      gl={{\n        powerPreference: \"high-performance\",\n        alpha: false,\n        antialias: true,\n      }}\n    >\n      {welcome&& <Controls welcome={welcome} />}\n\n      {props.children}\n    </Canvas>\n  );\n}\n","import { Physics, useSphere, useBox, usePlane } from \"use-cannon\";\nimport { useFrame, useLoader } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport lerp from \"lerp\";\nimport React, { Suspense, useRef } from \"react\";\n\nimport crossTexture from \"./cross.jpg\";\nimport PaddleModel from \"./PaddleModel\";\nimport Post from \"./Post\";\nimport Scene from \"./Scene\";\nimport useStore from \"./Store\";\n\nfunction Paddle() {\n  const { pong } = useStore((state) => state.api);\n  const welcome = useStore((state) => state.welcome);\n  const model = useRef();\n  const [ref, api] = useBox(() => ({\n    type: \"Kinematic\",\n    args: [3.4, 1, 3.5],\n    onCollide: (e) => pong(e.contact.impactVelocity),\n  }));\n  let values = useRef([0, 0]);\n  useFrame((state) => {\n    values.current[0] = lerp(\n      values.current[0],\n      (state.mouse.x * Math.PI) / 5,\n      0.2\n    );\n    values.current[1] = lerp(\n      values.current[1],\n      (state.mouse.x * Math.PI) / 5,\n      0.2\n    );\n\n    api.position.set(state.mouse.x * 10, state.mouse.y * 5, 0);\n    api.rotation.set(0, 0, values.current[1]);\n\n    model.current.rotation.x = lerp(\n      model.current.rotation.x,\n      welcome ? Math.PI / 2 : 0,\n      0.2\n    );\n    model.current.rotation.y = values.current[0];\n  });\n\n  return <PaddleModel ref={ref} model={model} />;\n}\n\nfunction Ball() {\n  const map = useLoader(THREE.TextureLoader, crossTexture);\n  const [ref] = useSphere(() => ({ mass: 1, args: 0.5, position: [0, 5, 0] }));\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshPhysicalMaterial\n        color=\"#FF9900\"\n        map={map}\n        clearcoat={1}\n        clearcoatRoughness={0}\n      />\n    </mesh>\n  );\n}\n\nfunction Background() {\n  return (\n    <mesh castShadow receiveShadow position={[0, 0, -10]}>\n      <planeBufferGeometry attach=\"geometry\" args={[1000, 1000]} />\n      <meshBasicMaterial color=\"#C4F2CA\" />\n    </mesh>\n  );\n}\n\nfunction ContactGround() {\n  // When the ground was hit we reset the game ...\n  const { reset } = useStore((state) => state.api);\n  const [ref] = usePlane(() => ({\n    type: \"Static\",\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -10, 0],\n    onCollide: () => reset(true),\n  }));\n  return <mesh ref={ref} />;\n}\n\nexport default function () {\n  const welcome = useStore((state) => state.welcome);\n  return (\n    <Scene>\n      <Post />\n      <ambientLight intensity={0.5} />\n      <pointLight position={[-10, -10, -10]} />\n      <spotLight\n        position={[10, 10, 10]}\n        angle={0.3}\n        penumbra={1}\n        intensity={1}\n        castShadow\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n        shadow-bias={-0.0001}\n      />\n      <directionalLight position={[-10, -10, -5]} intensity={0.5} />\n      <Physics\n        iterations={20}\n        tolerance={0.0001}\n        defaultContactMaterial={{\n          friction: 0.9,\n          restitution: 0.6,\n          contactEquationStiffness: 1e7,\n          contactEquationRelaxation: 1,\n          frictionEquationStiffness: 1e7,\n          frictionEquationRelaxation: 2,\n        }}\n        gravity={[0, -40, 0]}\n        allowSleep={false}\n      >\n        <Background />\n        <ContactGround />\n        {!welcome && <Ball />}\n        <Suspense fallback={null}>\n          <Paddle />\n        </Suspense>\n      </Physics>\n    </Scene>\n  );\n}\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from \"./App\"\nimport \"./styles.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}