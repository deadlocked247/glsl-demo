{"version":3,"sources":["ping.mp3","cross.jpg","App.js","index.js"],"names":["module","exports","font","THREE","parse","fontJson","geom","map","number","size","height","Text","color","children","props","array","useMemo","dispose","char","index","position","length","key","geometry","parseInt","attach","transparent","opacity","ping","Audio","pingSound","create","set","count","welcome","api","pong","velocity","currentTime","volume","clamp","play","state","reset","useStore","Paddle","useLoader","GLTFLoader","nodes","materials","model","useRef","useBox","type","args","onCollide","e","contact","impactVelocity","ref","values","useFrame","current","lerp","mouse","x","Math","PI","y","rotation","console","log","wood","clearcoat","clearcoatRoughness","foam","upper","glove","castShadow","scale","toString","object","Bone","Bone003","Bone006","Bone010","receiveShadow","material","material-roughness","arm","skeleton","mesh_0","side","mesh_1","mesh_2","lower","mesh_3","mesh_4","Ball","earthImg","useSphere","mass","ContactGround","usePlane","Scene","fallback","onClick","useCallback","sRGB","camera","fov","concurrent","shadowMap","gl","alpha","antialias","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","shadow-bias","iterations","tolerance","defaultContactMaterial","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","gravity","allowSleep","className","style","display","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f893c050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ping.e49c4b6b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cross.00397b42.jpg\";","// react-three-fiber is a way to express threejs declaratively: https://github.com/react-spring/react-three-fiber\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber';\n// use-cannon is a hook around the cannon.js physics library: https://github.com/react-spring/use-cannon\nimport { Physics, useSphere, useBox, usePlane } from 'use-cannon';\n// zustand is a minimal state-manager: https://github.com/react-spring/zustand\nimport create from 'zustand';\n\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport React, { Suspense, useRef, useCallback, useMemo } from 'react';\nimport lerp from 'lerp';\nimport clamp from 'lodash-es/clamp';\nimport pingSound from './ping.mp3';\nimport earthImg from './cross.jpg';\nimport fontJson from './firasans_regular.json';\nimport { EffectComposer, DepthOfField, Bloom, Noise, Vignette } from 'react-postprocessing';\nimport { Html, Icosahedron, useTextureLoader, useCubeTextureLoader, MeshDistortMaterial } from 'drei';\n\nimport Post from './Post';\n\nconst font = new THREE.FontLoader().parse(fontJson);\nconst geom = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].map(\n  (number) => new THREE.TextGeometry(number, { font, size: 5, height: 0.1 }),\n);\n\nfunction Text({ color, children, ...props }) {\n  const array = useMemo(() => [...children], [children]);\n  return (\n    <group {...props} dispose={null}>\n      {array.map((char, index) => (\n        <mesh position={[-(array.length / 2) * 3.5 + index * 3.5, 0, 0]} key={index} geometry={geom[parseInt(char)]}>\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={0.5} />\n        </mesh>\n      ))}\n    </group>\n  );\n}\n\n// Create a store ...\nconst ping = new Audio(pingSound);\nconst [useStore] = create((set) => ({\n  count: 0,\n  welcome: true,\n  api: {\n    pong(velocity) {\n      ping.currentTime = 0;\n      ping.volume = clamp(velocity / 20, 0, 1);\n      ping.play();\n      if (velocity > 4) set((state) => ({ count: state.count + 1 }));\n    },\n    reset: (welcome) => set((state) => ({ welcome, count: welcome ? state.count : 0 })),\n  },\n}));\n\n// The paddle was made in blender and auto-converted to JSX by https://github.com/react-spring/gltfjsx\nfunction Paddle() {\n  // Load the gltf file\n  const { nodes, materials } = useLoader(GLTFLoader, '/pingpong.glb');\n  // Fetch some reactive state\n  const { pong } = useStore((state) => state.api);\n  const welcome = useStore((state) => state.welcome);\n  const count = useStore((state) => state.count);\n  const model = useRef();\n  // Make it a physical object that adheres to gravitation and impact\n  const [ref, api] = useBox(() => ({\n    type: 'Kinematic',\n    args: [3.4, 1, 3.5],\n    onCollide: (e) => pong(e.contact.impactVelocity),\n  }));\n  // use-frame allows the component to subscribe to the render-loop for frame-based actions\n  let values = useRef([0, 0]);\n  useFrame((state) => {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    values.current[0] = lerp(values.current[0], (state.mouse.x * Math.PI) / 5, 0.2);\n    values.current[1] = lerp(values.current[1], (state.mouse.x * Math.PI) / 5, 0.2);\n    api.position.set(state.mouse.x * 10, state.mouse.y * 5, 0);\n    api.rotation.set(0, 0, values.current[1]);\n    // Left/right mouse movement rotates it a liitle for effect only\n    model.current.rotation.x = lerp(model.current.rotation.x, welcome ? Math.PI / 2 : 0, 0.2);\n    model.current.rotation.y = values.current[0];\n  });\n  console.log(materials)\n  if (materials) {\n    materials.wood.clearcoat = 1;\n    materials.wood.clearcoatRoughness = 0;\n\n    materials.foam.clearcoat = 1;\n    materials.foam.clearcoatRoughness = 0;\n\n    materials.upper.clearcoat = 1;\n    materials.upper.clearcoatRoughness = 0;\n\n\n    materials.glove.clearcoat = 1;\n    materials.glove.clearcoatRoughness = 0;\n  }\n  return (\n    <mesh castShadow ref={ref} dispose={null}>\n      <group ref={model} position={[-0.05, 0.37, 0.3]} scale={[0.15, 0.15, 0.15]}>\n        <Text rotation={[-Math.PI / 2, 0, 0]} position={[0, 1, 2]} size={1} children={count.toString()} />\n        <group rotation={[1.88, -0.35, 2.32]} scale={[2.97, 2.97, 2.97]}>\n          <primitive object={nodes.Bone} />\n          <primitive object={nodes.Bone003} />\n          <primitive object={nodes.Bone006} />\n          <primitive object={nodes.Bone010} />\n          <skinnedMesh\n            castShadow\n            receiveShadow\n            material={materials.glove}\n            material-roughness={1}\n            geometry={nodes.arm.geometry}\n            skeleton={nodes.arm.skeleton}\n          />\n        </group>\n        <group rotation={[0, -0.04, 0]} scale={[141.94, 141.94, 141.94]}>\n          <mesh castShadow receiveShadow material={materials.wood} geometry={nodes.mesh_0.geometry} />\n          <mesh castShadow receiveShadow material={materials.side} geometry={nodes.mesh_1.geometry} />\n          <mesh castShadow receiveShadow material={materials.foam} geometry={nodes.mesh_2.geometry} />\n          <mesh castShadow receiveShadow material={materials.lower} geometry={nodes.mesh_3.geometry} />\n          <mesh castShadow receiveShadow material={materials.upper} geometry={nodes.mesh_4.geometry} />\n        </group>\n      </group>\n    </mesh>\n  );\n}\n\nfunction Ball() {\n  // Load texture (the black plus sign)\n  const map = useLoader(THREE.TextureLoader, earthImg);\n  // Make the ball a physics object with a low mass\n  const [ref] = useSphere(() => ({ mass: 1, args: 0.5, position: [0, 5, 0] }));\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshPhysicalMaterial color=\"#FF9900\" map={map} clearcoat={1} clearcoatRoughness={0} />\n    </mesh>\n  );\n}\n\nfunction ContactGround() {\n  // When the ground was hit we reset the game ...\n  const { reset } = useStore((state) => state.api);\n  const [ref] = usePlane(() => ({\n    type: 'Static',\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -10, 0],\n    onCollide: () => reset(true),\n  }));\n  return <mesh ref={ref} />;\n}\n\nfunction Scene({ welcome }) {\n\n  return (\n    <>\n      <mesh castShadow receiveShadow position={[0, 0, -10]} >\n        <planeBufferGeometry attach=\"geometry\" args={[1000, 1000]} />\n        <meshBasicMaterial color=\"#FFCAB4\"/>\n      </mesh>\n      <ContactGround />\n      {!welcome && <Ball />}\n      <Suspense fallback={null}>\n        <Paddle />\n      </Suspense>\n    </>\n  );\n}\n\nexport default function () {\n  const welcome = useStore((state) => state.welcome);\n  const { reset } = useStore((state) => state.api);\n  const onClick = useCallback(() => welcome && reset(false), [welcome, reset]);\n\n  return (\n    <>\n      <Canvas\n      sRGB\n        camera={{ position: [0, 5, 12], fov: 50 }}\n        onClick={onClick}\n        concurrent\n        shadowMap\n        \n        gl={{ alpha: false, antialias: true }}>\n        >\n\n      <color attach=\"background\" args={[\"#FFEEE4\"]} />\n      <ambientLight intensity={0.5} />\n        <pointLight position={[-10, -10, -10]} />\n        <spotLight\n          position={[10, 10, 10]}\n          angle={0.3}\n          penumbra={1}\n          intensity={1}\n          castShadow\n          shadow-mapSize-width={2048}\n          shadow-mapSize-height={2048}\n          shadow-bias={-0.0001}\n        />\n      <directionalLight position={[-10, -10, -5]} intensity={0.5} />\n        <Physics\n          iterations={20}\n          tolerance={0.0001}\n          defaultContactMaterial={{\n            friction: 0.9,\n            restitution: 0.6,\n            contactEquationStiffness: 1e7,\n            contactEquationRelaxation: 1,\n            frictionEquationStiffness: 1e7,\n            frictionEquationRelaxation: 2,\n          }}\n          gravity={[0, -40, 0]}\n          allowSleep={false}>\n            {/* <Post /> */}\n\n          <Suspense fallback={null}>\n            <Scene welcome={welcome} />\n          </Suspense>\n        </Physics>\n      </Canvas>\n      <div className=\"startup\" style={{ display: welcome ? 'block' : 'none' }}>\n        * click to start ...\n      </div>\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from \"./App\"\nimport \"./styles.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}